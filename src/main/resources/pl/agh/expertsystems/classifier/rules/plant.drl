package pl.agh.expertsystems.classifier.rules

import pl.agh.expertsystems.classifier.model.*

global pl.agh.expertsystems.classifier.model.Plant resultPlant;

dialect  "mvel"

rule "Suggest BerryPlant"
    when
        Fruit(type == Fruit.Type.BERRY)
    then
        insert(BerryPlant.create())
end

rule "Suggest YEW"
    when
        BerryPlant() and Berry(color == Berry.Color.RED)
    then
        resultPlant.setPlantName(PlantName.YEW);
end

rule "Suggest JUNIPER"
    when
        BerryPlant() and Berry(color == Berry.Color.BLUE)
    then
        resultPlant.setPlantName(PlantName.JUNIPER);
end

rule "Suggest ConePlant"
    when
        Fruit(type == Fruit.Type.CONE)
    then
        insert(ConePlant.create())
end

rule "Suggest Fir or Spruce"
    when
        ConePlant() and Cone(shape == Cone.Shape.ELONGATED)
    then
        insert(FirHint.create())
        insert(SpruceHint.create())
end

rule "Suggest Pine or Larch"
    when
        ConePlant() and
        Cone(shape == Cone.Shape.OVAL)
    then
        insert(PineHint.create())
        insert(LarchHint.create())
end

rule "Suggest Scots pine or black pine or pinus mugo"
    when
        PineHint() and
        Needle(countInOneBase == Needle.CountInOneBase.ALWAYS_TWO)
    then
        insert(TwoNeedlePine.create())
end

rule "Suggest Pinus cembra or pinus strobus"
    when
        ConePlant() and
        Needle(countInOneBase == Needle.CountInOneBase.ALWAYS_FIVE)
    then
        insert(FiveNeedlePine.create())
end

rule "Suggest Fir"
    when
        FirHint() and
        (Cone(orientation == Cone.Orientation.UPWARDS) or
        Cone(decayPlace == Cone.DecayPlace.TREE))
    then
        resultPlant.setPlantName(PlantName.FIR);
end

rule "Suggest Spruce"
    when
        SpruceHint() and
        (Cone(orientation == Cone.Orientation.DOWNWARDS) or
        Cone(decayPlace == Cone.DecayPlace.GROUND))
    then
        resultPlant.setPlantName(PlantName.SPRUCE);
end

//rule "Suggest Pseudotsuga"
//    when
//        ConePlant() and
//        Needle(lemonScent == true)
//    then
//        resultPlant.setPlantName(PlantName.PSEUDOTSUGA);
//end
//
//rule "Suggest Scots pine"
//    when
//        TwoNeedlePine() and
//        Cone(size == Size.SMALL)
//    then
//        resultPlant.setPlantName(PlantName.SCOTS_PINE);
//end
//
//rule "Suggest black pine"
//    when
//        TwoNeedlePine() and
//        Cone(size == Size.BIG)
//    then
//        resultPlant.setPlantName(PlantName.BLACK_PINE);
//end
//
//rule "Suggest Pinus mugo"
//    when
//        TwoNeedlePine() and
//        PlantShape(shape == Shape.BUSH)
//    then
//        resultPlant.setPlantName(PlantName.PINUS_MUGO);
//end
//
//rule "Suggest Pinus cembra"
//    when
//        FiveNeedlePine() and
//        Cone(seed == Cone.Seed.NUT_SHAPED)
//    then
//        resultPlant.setPlantName(PlantName.PINUS_CEMBRA);
//end
//
//rule "Suggest Pinus strobus"
//    when
//        FiveNeedlePine() and
//        Cone(seed == Cone.Seed.WING_SHAPED)
//    then
//        resultPlant.setPlantName(PlantName.PINUS_STROBUS);
//end

rule "Suggest Larch"
    when
        LarchHint() and
        Needle(countInOneBase == Needle.CountInOneBase.MORE_THAN_TWENTY)
    then
        resultPlant.setPlantName(PlantName.LARCH);
end
